# proto-file: cogenv/proto/belval_matrices.textproto
# proto-message: belval_matrices.Task

id: "belval_matrices"
name: "BehaverseBelvalMatrices"
description: "Install Behaverse, run it, and initiate Belval Matrices scene"

setup_steps: [
  {
    adb_request: {
      generic: {
        args: ["root"]
        }
    }
  },
  {
    sleep: {
      time_sec: 2
    }
  },
  {
    adb_request: {
      generic:{
        args:[
          "push",
          "vendor/BM.json",
          "/storage/emulated/0/Android/data/org.xcit.behaverse/files/Tasks/Resources/Configs/BM.json"
        ]
      }
      # push: {
      #   content: "<MISSING>"
      #   path: "/sdcard/Android/data/org.xcit.behaverse/files/Tasks/Resources/Configs/BM.json"
      # }
    }
  },
  {
    sleep: {
      time_sec: 1
    }
  },
  {
    adb_request: {
      generic:{
        args:[
          "shell",
          "chmod", "777", "-R",
           "/storage/emulated/0/Android/data/org.xcit.behaverse/"
        ]
      }
    }
  },
  {
    adb_request: {
      generic:{
        args:["shell", "setenforce", "0"]
      }
    }
  },
  {
    adb_request: {
      install_apk: {
        filesystem: {
          path: "vendor/Behaverse_android_1.0.60_debug.apk"
        }
      }
    }
    success_condition: {
      check_install: {
        package_name: "org.xcit.behaverse"
        timeout_sec: 10.0
      }
    }
  },
  {
    # Put the device in landscape mode.
    adb_request: {
      settings: {
        name_space: SYSTEM
        put: { key: "user_rotation" value: "1" }
      }
    }
  }
]

reset_steps: [
  {
    adb_request: {
      start_activity: {
        force_stop: true
        full_activity: "org.xcit.behaverse/com.unity3d.player.UnityPlayerActivity"
        extra_args: []
      }
    }
    success_condition: {
      wait_for_app_screen: {
        app_screen: {
          activity: "org.xcit.behaverse/com.unity3d.player.UnityPlayerActivity"
          view_hierarchy_path: []
        }
        timeout_sec: 60.0
      }
      num_retries: 1
    }
  },
  {
    sleep: {
      time_sec: 20
    }
  },
  {
    adb_request: {
      start_screen_pinning: {
        # full_activity: "com.android.chrome/com.google.android.apps.chrome.Main"
        full_activity: "org.xcit.behaverse/com.unity3d.player.UnityPlayerActivity"
      }
    }
  },
  {
    adb_request: {
      # tap play button (45x60)  in (320x240)
      tap: {
        x: 45
        y: 60
      }
      # BM choices (in 320x240)
      # x=100,140,180,220
      # y=170,210
    }
  },
  {
    sleep: {
      time_sec: 2
    }
  },
  {
    adb_request: {
      # tap BM button (45x60)  in (320x240)
      tap: {
        x: 45
        y: 60
      }
    }
  },
  {
    sleep: {
      time_sec: 2
    }
  },
  {
    adb_request: {
      # tap timeline button (45x60)  in (320x240)
      tap: {
        x: 45
        y: 60
      }
    }
  },
  {
    sleep: {
      time_sec: 2
    }
  }
]

expected_app_screen: {
  activity: "org.xcit.behaverse/com.unity3d.player.UnityPlayerActivity"
  view_hierarchy_path: [
  ]
}


max_episode_sec: 7200

log_parsing_config: {

  filters: ["*:S", "Unity:I"]
  log_regexps: {
    score: "^[Ss]core: ([-+]?[0-9]*\\.?[0-9]*)$"
    reward: ".*accuracy: ([0-9]*\\.?[0-9]*).*"
    episode_end: "^.*BlockEnd.*$"  # End the episode upon any event received.
    extra: "^(P?<extra>.*)$"
    json_extra: "^(?P<json_extra>.*base.*)$"
  }
}

extras_spec: [
  { name: "base" shape:[1] dtype: STRING }
  # All of these a returned when the ball arrives at the bottom of the screen
  # The number of remaining lives
  # { name: "lives" shape: [1] dtype: INT32 },
  # # The x,y coordinates of the centel of the ball
  # { name: "ball" shape: [2] dtype: INT32 },
  # # The x,y coordinates of the center of the paddle
  # { name: "paddle" shape: [2] dtype: INT32 },
  # # The paddle width
  # { name: "paddle_width" shape: [1] dtype: INT32 }
  # { name: "chrome_console" shape: [1] dtype: STRING}
]
